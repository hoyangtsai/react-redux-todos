{"version":3,"sources":["components/Link.js","components/FilterLink.js","actions/index.js","components/Footer.js","components/AddTodo.js","components/Todo.js","components/TodoList.js","components/VisibleTodoList.js","App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","index.js","localStorage.js"],"names":["Link","active","children","onClick","href","e","preventDefault","FilterLink","connect","state","ownProps","filter","visibilityFilter","dispatch","type","Footer","input","onSubmit","text","value","trim","id","v4","ref","node","Todo","completed","style","textDecoration","TodoList","todos","onTodoClick","map","todo","getVisibleTodos","t","Error","VisibleTodoList","toggleTodo","App","action","undefined","todoApp","combineReducers","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","subscribe","throttle","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4c0b0f6.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Link = ({ active, children, onClick }) => {\n  if (active) {\n    return <span>{children}</span>;\n  }\n\n  return (\n    // eslint-disable-next-line\n    <a\n      href=\"#\"\n      onClick={e => {\n        e.preventDefault();\n        onClick();\n      }}\n    >\n      {children}\n    </a>\n  );\n};\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Link;","import { connect } from 'react-redux';\nimport { setVisibilityFilter } from '../actions';\nimport Link from './Link';\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter,\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick() {\n    dispatch(setVisibilityFilter(ownProps.filter));\n  },\n});\n\nconst FilterLink = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link);\n\nexport default FilterLink;","import { v4 } from 'node-uuid';\n\nexport const addTodo = (text) => ({\n  type: 'ADD_TODO',\n  id: v4(),\n  text,\n});\n\nexport const setVisibilityFilter = (filter) => ({\n  type: 'SET_VISIBILITY_FILTER',\n  filter,\n});\n\nexport const toggleTodo = (id) => ({\n  type: 'TOGGLE_TODO',\n  id,\n});","import React from 'react';\nimport FilterLink from './FilterLink';\n\nconst Footer = () => (\n  <p>\n    Show:\n    {\" \"}\n    <FilterLink filter=\"SHOW_ALL\">\n      All\n    </FilterLink>\n    {\", \"}\n    <FilterLink filter=\"SHOW_ACTIVE\">\n      Active\n    </FilterLink>\n    {\", \"}\n    <FilterLink filter=\"SHOW_COMPLETED\">\n      Completed\n    </FilterLink>\n  </p>\n);\n\nexport default Footer;","\nimport { connect } from 'react-redux';\nimport { addTodo } from '../actions';\nimport PropTypes from 'prop-types';\n\nconst AddTodo = ({ dispatch }) => {\n  let input;\n\n  return (\n    <div>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          if (!input.value.trim()) {\n            return;\n          }\n          dispatch(addTodo(input.value));\n          input.value = '';\n        }}\n      >\n        <input ref={node => { input = node; }} />\n        <button type=\"submit\">\n          Add Todo\n        </button>\n      </form>\n    </div>\n  );\n};\n\nAddTodo.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default connect()(AddTodo);","\nimport PropTypes from 'prop-types';\n\nconst Todo = ({ onClick, completed, text }) => (\n  <li\n    onClick={onClick}\n    style={{\n      textDecoration: completed ? 'line-through' : 'none',\n    }}\n  >\n    {text}\n  </li>\n);\n\nTodo.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Todo;","import PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nconst TodoList = ({ todos, onTodoClick }) => (\n  <ul>\n    {todos.map(todo =>\n      <Todo\n        key={todo.id}\n        {...todo}\n        onClick={() => onTodoClick(todo.id)}\n      />\n    )}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired,\n  }).isRequired).isRequired,\n  onTodoClick: PropTypes.func.isRequired,\n};\n\nexport default TodoList;","import { connect } from 'react-redux';\nimport { toggleTodo } from '../actions';\nimport TodoList from './TodoList';\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case 'SHOW_ALL':\n      return todos;\n    case 'SHOW_COMPLETED':\n      return todos.filter(t => t.completed);\n    case 'SHOW_ACTIVE':\n      return todos.filter(t => !t.completed);\n    default:\n      throw new Error(`Unknown filter: ${filter}.`);\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onTodoClick(id) {\n    dispatch(toggleTodo(id));\n  },\n});\n\nconst VisibleTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList);\n\nexport default VisibleTodoList;","import './App.css';\nimport Footer from './components/Footer';\nimport AddTodo from './components/AddTodo';\nimport VisibleTodoList from './components/VisibleTodoList';\n\nfunction App() {\n  return (\n    <div>\n      <AddTodo />\n      <VisibleTodoList />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const todo = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return {\n        id: action.id,\n        text: action.text,\n        completed: false,\n      };\n    case 'TOGGLE_TODO':\n      if (state.id !== action.id) {\n        return state;\n      }\n      return {\n        ...state,\n        completed: !state.completed,\n      };\n    default:\n      return state;\n  }\n};\n\nconst todos = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [\n        ...state,\n        todo(undefined, action),\n      ];\n    case 'TOGGLE_TODO':\n      return state.map(t =>\n        todo(t, action)\n      );\n    default:\n      return state;\n  }\n};\n\nexport default todos;","\nconst visibilityFilter = (state = 'SHOW_ALL', action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter;\n    default:\n      return state;\n  }\n};\n\nexport default visibilityFilter;","import { combineReducers } from 'redux';\nimport todos from './todos';\nimport visibilityFilter from './visibilityFilter';\n\nconst todoApp = combineReducers({\n  todos,\n  visibilityFilter,\n});\n\nexport default todoApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport throttle from 'lodash/throttle';\nimport todoApp from './reducers';\nimport { loadState, saveState } from './localStorage';\n\nconst persistedState = loadState();\nconst store = createStore(\n  todoApp,\n  persistedState\n);\n\nstore.subscribe(throttle(() => {\n  saveState({\n    todos: store.getState().todos,\n  });\n}, 1000));\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (err) {\n    // Ignore write errors.\n  }\n};"],"sourceRoot":""}